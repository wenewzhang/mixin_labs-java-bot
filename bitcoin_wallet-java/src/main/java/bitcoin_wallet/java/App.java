/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package bitcoin_wallet.java;

import mixin.java.sdk.MixinHttpUtil;
import mixin.java.sdk.MixinAPI;
import java.security.PrivateKey;
import com.google.gson.JsonObject;
import com.google.gson.JsonParser;
import com.google.gson.JsonArray;
import com.google.gson.JsonElement;

import javax.crypto.Cipher;
import java.io.UnsupportedEncodingException;
import java.security.GeneralSecurityException;
import java.security.KeyFactory;
import java.security.KeyPair;
import java.security.KeyPairGenerator;
import java.security.PrivateKey;
import java.security.PublicKey;
import java.security.interfaces.RSAPrivateKey;
import java.security.interfaces.RSAPublicKey;
import org.bouncycastle.jce.provider.BouncyCastleProvider;
import java.util.Base64;
import java.security.Key;
import java.io.FileNotFoundException;
// import java.io.FileOutputStream;
import java.io.IOException;
// import java.security.NoSuchAlgorithmException;

public class App {

    public static final String EXIN_BOT         = "61103d28-3ac2-44a2-ae34-bd956070dab1";
    public static final String BTC_ASSET_ID     = "c6d0c728-2624-429b-8e0d-d9d19b6592fa";
    public static final String EOS_ASSET_ID     = "6cfe566e-4aad-470b-8c9a-2fd35b49c68d";
    public static final String USDT_ASSET_ID    = "815b0b1a-2764-3736-8faa-42d694fa620a";
    public static final String BTC_WALLET_ADDR  = "14T129GTbXXPGXXvZzVaNLRFPeHXD1C25C";
    public static final String MASTER_UUID      = "0b4f49dc-8fb4-4539-9a89-fb3afc613747";
    private static PublicKey publicKey;
    private static PrivateKey privateKey;

    public static void main(String[] args) {
        MixinAPI mixinApi = new MixinAPI(Config.CLIENT_ID, Config.CLIENT_SECRET,
                                         Config.PIN, Config.SESSION_ID, Config.PIN_TOKEN,
                                         Config.RSA_PRIVATE_KEY);
        JsonArray assets = mixinApi.getAssets();
        assets.forEach((element) ->  {
           JsonObject jsonObj = element.getAsJsonObject();
           System.out.println(jsonObj.get("asset_id").getAsString() + " " +
                              jsonObj.get("symbol").getAsString() + " " +
                              jsonObj.get("balance").getAsString() );
        });
        JsonObject asset = mixinApi.getAsset(BTC_ASSET_ID);
        System.out.println(asset);

        // JsonObject transInfo = mixinApi.transfer("965e5c6e-434c-3fa9-b780-c50f43cd955c",MASTER_UUID,"0.1","hi");
        // System.out.println(transInfo);

        JsonObject vInfo = mixinApi.verifyPin(Config.PIN);
        System.out.println(vInfo);
        try {
          KeyPairGenerator kpg = KeyPairGenerator.getInstance("RSA");
          kpg.initialize(1024);
          KeyPair kp = kpg.genKeyPair();

          // KeyFactory fact = KeyFactory.getInstance("RSA");
          // RSAPublicKeySpec pub = fact.getKeySpec(kp.getPublic(),
          //         RSAPublicKeySpec.class);
          // RSAPrivateKeySpec priv = fact.getKeySpec(kp.getPrivate(),
          //         RSAPrivateKeySpec.class);
          RSAPrivateKey priv = (RSAPrivateKey) kp.getPrivate();
          RSAPublicKey pub = (RSAPublicKey) kp.getPublic();
          // publicKey = fact.generatePublic(pub);
          // privateKey = fact.generatePrivate(priv);
          // System.out.println(publicKey);
          // System.out.println(privateKey);
          writePemFile(priv, "RSA PRIVATE KEY", "id_rsa");
          writePemFile(pub, "RSA PUBLIC KEY", "id_rsa.pub");
          System.out.println(Base64.getEncoder().encodeToString(pub.getEncoded()));
      } catch(Exception e) {
               e.printStackTrace();
      }
    }
    private static void writePemFile(Key key, String description, String filename)
    throws FileNotFoundException, IOException {
      PemFile pemFile = new PemFile(key, description);
      pemFile.write(filename);

      // System.out.println("%s successfully writen in file %s.", description, filename);
    }
}
